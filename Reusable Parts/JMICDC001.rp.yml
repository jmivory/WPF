Reusable Part:
  Name:               JMICustomerContactsDataClient
  Enabled For RDMLX:  Yes
  Target Platform:    Browser

  Multilingual Details:
  - ENG:
      Description:        "Data Client for Customer Contacts"

  Source: |
    Function Options(*DIRECT)
    Begin_Com Role(*EXTENDS #PRIM_OBJT)
    
    * Application References
    Define_Com Class(#BPFBrowserEvents) Name(#Browser) Scope(*APPLICATION)
    
    * Definitions
    Define Field(#UserContactID) Reffld(#xContactIdentification)
    
    Def_List Name(#xContactsList) Fields(#xContactIdentification #xContactTitle #xContactLastName #xContactFirstName #xContactGender #xContactEmailAddress #xContactMobilePhone #xContactHomePhone #xContactFaxNumber #xContactBusinessPhone #xContactNotes #xContactPhoto #xContactInterests #xContactBirthdate #xContactHometown #xContactCity #xContactJobTitle #xContactCompany #xContactAddress #xContactCompanySite #xContactFullName #xContactFullAddress) Counter(#ListCount) Type(*WORKING) Entrys(*MAX)
    
    * Properties
    Define_Pty Name(CustContacts) Get(*REFERENCE #CustContacts)
    Define_Pty Name(CustContact) Get(GetCustContact)
    
    
    * Events
    Define_Evt Name(OnGetCustomerContactsCompleted)
    Define_Map For(*INPUT) Class(#PRIM_BOLN) Name(#MoreResult)
    
    Define_Evt Name(GetCustomerContactFailed)
    
    Define_Evt Name(OnGetCustomerContactCompleted)
    Define_Evt Name(OnGetCustomerContactFailed)
    Define_Evt Name(ContactSelected)
    
    *
    Define_Evt Name(SetContactUpdated)
    Define_Map For(*INPUT) Class(#JMICustomerContactClass) Name(#Contact) Pass(*BY_REFERENCE)
    
    * Objects
    
    * Collections
    Define_Com Class(#PRIM_LCOL<#JMICustomerContactClass>) Name(#CustContacts)
    
    Define_Com Class(#JMICustomerContactClass) Name(#selectedcontact) Reference(*DYNAMIC)
    
    * Property
    * Define_Pty Name(SelectedContact) Get(*REFERENCE #selectedcontact) Set(*REFERENCE #selectedcontact)
    
    * Routines
    
    * Properties
    Ptyroutine Name(GetCustContact)
    Define_Map For(*OUTPUT) Class(#JMICustomerContactClass) Name(#Property) Pass(*BY_REFERENCE)
    Define_Map For(*INPUT) Class(#xContactIdentification) Name(#Key)
    
    * Search till the first match
    For Each(#Item) In(#CustContacts)
    
    Continue If(#Key <> #Item.ContactID)
    
    #Property <= #Item
    
    Leave
    
    Endfor
    
    Endroutine
    
    * Events
    
    * Methods
    
    * By name Only
    Mthroutine Name(GetCustContacts)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#UserValue)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
     
    * Define Request to Server Routine
    Define_Com Class(#JMIContactsDataServer.GetContactsByName) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Username(#UserValue) Userdata(#CustContacts) Moreresults(#More) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = "OK")
    
    Signal Event(OnGetCustomerContactsCompleted) Moreresult(#More)
    
    Else
    
    Signal Event(OnGetCustomerContactFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetCustomerContactFailed)
    
    Endroutine
    
    Endroutine
    
    
    
    * Get Customer by ID only
    Mthroutine Name(GetCustContactByID)
    Define_Map For(*INPUT) Class(#PRIM_ALPH) Name(#UserValue)
    
    * Local Variable
    Define_Com Class(#PRIM_BOLN) Name(#More)
    
    * Define Request to Server Routine
    Define_Com Class(#JMIContactsDataServer.GetContactByID) Name(#Request)
    
    * Make Request
    #Request.ExecuteAsync Uservalue(#UserContactID) Custcontacts(#xContactsList) Status(#Status)
    
    Evtroutine Handling(#Request.Completed)
    
    If (#Status = "OK")
    
    Signal Event(OnGetCustomerContactCompleted)
    
    Else
    
    Signal Event(OnGetCustomerContactFailed)
    
    Endif
    
    Endroutine
    
    Evtroutine Handling(#Request.Failed) Handled(#Handled) Reason(#Reason)
    
    #Handled := True
    Signal Event(OnGetCustomerContactFailed)
    
    Endroutine
    
    Endroutine
    
    * Mthroutine Name(SelectContact)
    * Define_Map For(*INPUT) Class(#JMICustomerContactClass) Name(#CurrentContact) Pass(*BY_REFERENCE)
    *
    * #selectedcontact <= #CurrentContact
    *
    * Signal Event(ContactSelected)
    *
    * Endroutine
    
    * From ContactDataClass
    Evtroutine Handling(#selectedcontact.OnContactUpdated) Contact(#updatecontact)
    
    Signal Event(SetContactUpdated) Contact(#updatecontact)
    
    Endroutine
    End_Com
